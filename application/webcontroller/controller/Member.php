<?php
/**
 * 会员管理
 * Created by PhpStorm.
 * User: Vernon
 * @Time: 2018/7/12   10:28
 */

namespace app\webcontroller\controller;

class Member extends Common{
    private $model;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->model=new \app\common\model\Member();
    }
    /**
     * 首页
     * @param $request
     * @return json
     */
    public function index(){
        //定义数据表格
        $table = [
            ['type' => 'numbers', 'title' => '序号'],
            ['field' => 'nickname','title' => '姓名','align'=>'center','width' => 150,],
            ['field' => 'phone', 'title' =>'手机号','align'=>'center', 'width' => 150],
            ['field' => 'create_time','title' => '创建时间','align'=>'center','width' => 200,],
            ['field' => 'sumprice','title' => '总成交金额','align'=>'center','width' => 100],
            ['field' => 'volume','title' => '总成交量','align'=>'center','width' => 100],
            ['field' => 'level','title' => '级别','align'=>'center','width' => 100],
            ['field' => 'status','title' => '状态','align'=>'center','width' => 100,'templet' => '#tb-status'],

            //操作标签
            ['title'   => '操作','width'   => 200,'align'   => 'center','toolbar' => '#tb-action',],
        ];
        //会员总数
        $member['membersum']=db('member')->count();
        //被屏蔽的数量
        $member['shield']=db('member')->where('status','<>',1)->count();
        //统计各级别数量
        $member['level1']=db('member')->where('level',1)->count();
        $member['level2']=db('member')->where('level',2)->count();
        $member['level3']=db('member')->where('level',3)->count();
        $member['level4']=db('member')->where('level',4)->count();
        $member['level5']=db('member')->where('level',5)->count();

        $this->assign('table', json_encode($table));
        $this->assign('member',$member);


        return $this->fetch();
    }


    /**
     * 新增功能
     */
    public function create()
    {
        // 判断当前操作
        if ($this->request->isAjax()) {

            $request = input();

            return $this->addAction($request, $this->model);

        }
        return $this->fetch('createEdit');
    }


    /**
     * 编辑
     * @param $request
     * @return json
     */
    public function edit($id)
    {
        if ($this->request->isAjax()) {
            $request = input();

            return $this->editActon($request, $this->model);
        }
        $data = $this->model->find($id);

        $this->assign('data', $data);

        return $this->fetch('createEdit');
    }

    /**
     * 删除
     * @param $request
     * @return json
     */
    public function delete()
    {
        if ($this->request->isAjax() && $this->request->has('id')) {
            $id = $this->request->post('id');

            $data = $this->model->get($id);

            if (!$data) {
                return $this->result('', 400, '当前数据不存在！删除失败');
            }

            $result = $data->delete();

            if ($result == FALSE) {
                return $this->result('', 400, $data->getError());
            }

            return $this->result('', 200, '删除成功');
        }

        return $this->result('', 400, '删除失败');
    }

    /**
     * 获取数据
     * @param $request
     * @return json
     */
    public function getData($limit)
    {
        $request = input();

        if(!empty($request['key'])){
            $data = $this->model
                ->where('nickname','like',"%".$request['key']['nickname']."%")
                ->whereOr('phone',$request['key']['nickname'])
                ->order('create_time desc')
                ->paginate($limit)
                ->toArray();
            foreach($data['data'] as $k => $v){
                if(!empty($v['id'])){
                    $data['data'][$k]['sumprice']=db('orders')->alias('o')->where('o.m_id',$v['id'])->where('status',4)->sum('end_price');
                    $data['data'][$k]['volume']=db('orders')->alias('o')->where('o.m_id',$v['id'])->where('status',4)->count();

                }
            }
        }else{
            $data = $this->model
                ->alias('a')
                ->order('create_time desc')->paginate($limit)->toArray();

            foreach($data['data'] as $k => $v){
                if (!empty($v['id'])){
                    //总成交额
                    $data['data'][$k]['sumprice']=db('orders')->alias('o')->where('o.m_id',$v['id'])->where('status',4)->sum('end_price');
                    //总成交数量
                    $data['data'][$k]['volume']=db('orders')->alias('o')->where('o.m_id',$v['id'])->where('status',4)->count();


                }
            }
//            halt($data['data']);

        }

        return $this->result_layui($data['data'], 200, '分类信息', $data['total']);
    }

    /**
     * 编辑状态
     * @param $request
     * @return json
     */
    public function updatestate(){
        if ($this->request->isAjax() && $this->request->has('id')) {
            $data = $this->request->post();

            if (!$data) {
                return $this->result('', 400, '当前数据不存在！删除失败');
            }

            $this->model->where('id', $data['id'])->update(['status' => $data['status']]);
            return $this->result('', 200, '修改成功');
        }
        return $this->result('', 400, '修改失败');
    }
}