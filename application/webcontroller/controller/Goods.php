<?php
/**
 *  商品控制器
 * @version  1.0
 * @author   yuanzhenchao
 * @date     2018/5/30
 */
namespace app\webcontroller\controller;

use think\Db;


class Goods extends Common
{
    private $model;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->model=new \app\common\model\Goods();
    }

    public function index()
    {
        //定义数据表格
        $table = [
            ['type' => 'numbers', 'title' => '序号'],
            ['field' => 'goods_name','title' => '商品名称','align'=>'center','width' => 150,],
            ['field'=>  'cname','title'=>'分类','align'=>'center','width' => 100,],
            ['field'=>  'name','title'=>'归属者','align'=>'center','width' => 100,],
            ['field'=>  'acname','title'=>'作品来源','align'=>'center','width' => 100,],
//            ['field'=>  'volume','title'=>'数量','align'=>'center','width' => 100,],
            ['field'=>  'author','title'=>'作者','align'=>'center','width' => 80,],
            ['field'=>  'decade','title'=>'年代','align'=>'center','width' => 100,],
            ['field'=>  'top','title'=>'是否置顶','align'=>'center','width' => 100,'templet' => '#tb-top'],
            ['field'=>  'decoration','title'=>'作品状态','align'=>'center','width' => 100,'templet' => '#tb-decoration'],
            ['field'=>  'size','title'=>'尺寸','align'=>'center','width' => 150 ],
//            ['field'=>  'artist_class_id','title'=>'作品来源','align'=>'center','width' => 100,],

            ['field' => 'image', 'title' =>'封面图','align'=>'center', 'width' => 100,'templet' => '#tb-image'],
//            ['field' => 'cover_plan', 'title' =>'封面图','align'=>'center', 'width' => 100,'templet' => '#tb-image'],
            ['field' => 'bond', 'title' =>'保证金','align'=>'center', 'width' => 80],
            ['field' => 'starting_price','title' => '起拍价','align'=>'center','width' => 80,],
            ['field' => 'range_price','title' => '加价幅度','align'=>'center','width' => 80,],
            ['field' => 'postage','title' => '快递','align'=>'center','width' => 80,],
            ['field' => 'sort','title' => '排序','align'=>'center','width' => 80,],
            ['field' => 'start_time','title' => '开始时间','align'=>'center','width' => 160,],
            ['field' => 'end_time','title' => '结束时间','align'=>'center','width' => 160,],
            ['field' => 'status','title' => '状态','align'=>'center','width' => 100,'templet' => '#tb-status'],
            //操作标签
            ['fixed'   => 'right','title'   => '操作','width'   => 178,'align'   => 'center','toolbar' => '#tb-action',],
        ];


        $this->assign('table', json_encode($table));

        return $this->fetch();
    }

    /**
     * 数据列表
     * @param string
     * @return json
     */
    public function getData($limit)
    {

        $name = '';
        $data = $this->request->param();

        if(!empty($data['key']['nickname'])){
            $name = trim($data['key']['nickname']);
        }
//        dump($data);
        if($name){
            $data = $this->model
                ->field('goods.*,cates.cname,artist.name,artist_class_id,artist_class.name as acname')
                ->join('artist','goods.artist_id=artist.id','LEFT')
                ->join('cates','goods.cates_id=cates.id','LEFT')
                ->join('artist_class','artist_class.id=artist.artist_class_id','LEFT')
                ->where('goods_name','like','%'.$name.'%')
                ->order('goods.create_time desc,goods.sort asc')
                ->paginate($limit)->toArray();

        }else{
            $data = $this->model
                ->field('goods.*,cates.cname,artist.name,artist_class_id,artist_class.name as acname')
                ->join('artist','goods.artist_id=artist.id','LEFT')
                ->join('cates','goods.cates_id=cates.id','LEFT')
                ->join('artist_class','artist_class.id=artist.artist_class_id','LEFT')
                ->order('goods.create_time desc,goods.sort asc')
                ->paginate($limit)->toArray();
        }


        return $this->result_layui($data['data'], 200, '分类信息', $data['total']);

    }

    /**
     * 新增功能
     */
    public function create()
    {

        // 判断当前操作
        if ($this->request->isAjax()) {
            $request = input();

            if(!empty($request['image'])){
                $request['image'] = implode(',',$request['image']);
            }
            return $this->addAction($request, $this->model);
        }

        $artist=Db::table('artist')->field('id,name')->select();
        $cates=Db::table('cates')->field('id,cname')->select();

        return $this->fetch('createEdit',['cates'=>$cates,'artist'=>$artist]);
    }

    /**
     * 编辑功能
     */
    public function edit($id)
    {
        if ($this->request->isAjax()) {
            $request = input();

            if(!empty($request['image'])){
                $request['image'] = implode(',',$request['image']);
            }
            return $this->editActon($request, $this->model);
        }


        $data = $this->model->find($id);
//        p($data);exit;
        $data['image'] = explode(',',$data['image']);
        $artist=Db::table('artist')->field('id,name')->select();
        $cates=Db::table('cates')->field('id,cname')->select();
        $catesid=$data->cates_id;
        $artistid=$data->artist_id;

        $this->assign([
            'data'=>$data,
            'cates'=>$cates,
            'catesid'=>$catesid,
            'artist'=>$artist,
            'artistid'=>$artistid
//            'catesid'=>$catesid
        ]);

        return $this->fetch('createEdit');
    }




    /**
     * 删除
     */
    public function delete($id)
    {
        return $this->delAction($id, $this->model);

    }
}