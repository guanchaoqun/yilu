<?php
/**
 * 基础类
 * Created by PhpStorm.
 * User: 星亿达
 * Date: 2018/3/14
 * Time: 17:46
 */

namespace app\webcontroller\controller;


use think\Controller;
use think\exception\HttpResponseException;
use think\Lang;
use think\Response;

class Base extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        define('MODULE_NAME', $this->request->module());
        define('CONTROLLER_NAME', $this->request->controller());
        define('ACTION_NAME', $this->request->action());

        //加载多语言
        Lang::load(APP_PATH . MODULE_NAME . '/lang/zh-cn/' . CONTROLLER_NAME . '.php');
    }

    /**
     * 返回封装后的API数据到客户端
     * @access protected
     * @param mixed   $data   要返回的数据
     * @param integer $code   返回的code
     * @param mixed   $msg    提示信息
     * @param string  $type   返回数据格式
     * @param array   $header 发送的Header信息
     * @return void
     */
    protected function result_layui($data, $code = 0, $msg = '', $count = 0, $type = '', array $header = [])
    {
        $result   = [
            'code'  => $code,
            'msg'   => $msg,
            'count' => $count,
            'time'  => $this->request->server('REQUEST_TIME'),
            'data'  => $data,
        ];
        $type     = $type ?: $this->getResponseType();
        $response = Response::create($result, $type)->header($header);
        throw new HttpResponseException($response);
    }

    /**
     * 返回成功信息
     * @param string $msg 提示消息
     * @param null   $data 数据
     */
    protected function result_success($msg = '', $data = NULL)
    {
        if (!$data) $data = (object)[];

        $result   = [
            'code' => 200,
            'msg'  => $msg,
            'time' => $this->request->server('REQUEST_TIME'),
            'data' => $data,
        ];

        $type     = $this->getResponseType();
        $response = Response::create($result, $type)->header([]);
        throw new HttpResponseException($response);
    }

    /**
     * 返回失败信息
     * @param string $msg 提示消息
     */
    protected function result_error($msg = '')
    {
        $result   = [
            'code' => 400,
            'msg'  => $msg,
            'time' => $this->request->server('REQUEST_TIME'),
            'data' => (object)[],
        ];
        $type     = $this->getResponseType();
        $response = Response::create($result, $type)->header([]);
        throw new HttpResponseException($response);
    }
}