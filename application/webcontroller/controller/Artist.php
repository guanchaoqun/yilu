<?php
/**
 *
 * @param $request
 * @return json
 */
namespace app\webcontroller\controller;
use think\Db;

class Artist extends Common{
    private $model;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model=new \app\common\model\Artist();
    }

    /**
     * 首页
     * @param $request
     * @return json
     */
    public function index(){
        //定义数据表格
        $table = [
            ['type' => 'numbers', 'title' => '序号'],
            ['field' => 'classname','title' => '来源','align'=>'center','width' => 150,],
            ['field' => 'name','title' => '姓名','align'=>'center','width' => 150,],
            ['field' => 'headimgurl','title' => '头像','align'=>'center','width' => 150,'templet'=>'#tb-image'],
            ['field' => 'phone','title' =>'手机号','align'=>'center','width' => 150],
            ['field' => 'shopname','title' =>'店铺','align'=>'center','width' => 150],
//            ['field' => 'author','title' =>'作者','align'=>'center','width' => 150],
            ['field' => 'count','title' =>'拍卖量','align'=>'center','width' => 100],
            ['field' => 'pricesum','title' =>'成交金额','align'=>'center','width' => 100],
            ['field' => 'num','title' =>'成交量','align'=>'center','width' => 100],
//            ['field' => 'follownum','title' =>'关注量','align'=>'center','width' => 80],
            ['field' => 'followsum','title' =>'关注量','align'=>'center','width' => 80],
            ['field' => 'create_time','title' => '创建时间','align'=>'center','width' => 200,],
            ['field' => 'status','title' => '状态','align'=>'center','width' => 100,'templet' => '#tb-status'],
            //操作标签
            ['fixed'   => 'right','title'   => '操作','width'   => 178,'align'   => 'center','toolbar' => '#tb-action',],
        ];

        $artist=db('artist')->count();
//        dump($artist);
        $this->assign('table', json_encode($table));
        $this->assign('artist',$artist);
        return $this->fetch();
    }


    /**
     * 新增功能
     */
    public function create()
    {
        // 判断当前操作
        if ($this->request->isAjax()) {

            $request = input();
            if(!empty($request['image'])){
                $request['image'] = implode(',',$request['image']);
            }
            return $this->addAction($request, $this->model);

        }

        $data['artist_class_id'] = 0;
        //分类
        $class = Db::table('artist_class')
            ->where(['status'=>1])
            ->order('create_time')
            ->select();

        $this->assign('class',$class);



        $this->assign('data',$data);
        return $this->fetch('createEdit');
    }

    /**
     * 详情
     * @return string
     * 参数 ID 列表中传参 归者者ID
     */
     public function read($id)
     {
//         if ($this->request->isAjax()) {
//             $request=input();
//
//        $data=    $this->model()->where('id',$request['id'])->find();
//         }
         //详情信息
         $data=Db::table('artist')
             ->alias('a')
             ->field('a.id,a.name as artistname,artist_class.name,shopname')
             ->join('artist_class','artist_class.id=artist.artist_class_id','LEFT')
             ->join('shop','shop.art_id=artist.id','LEFT')
             ->where('a.id',$id)->find();
         //成交量
         $volume=Db::table('shop')
             ->alias('s')
             ->where('s.art_id',$id)
             ->join('orders','s_id=shop.id')
             ->where('orders.status','IN','2,3,4')
             ->count();
         //成交金额
         $price=Db::table('shop')
             ->alias('s')
             ->where('s.art_id',$id)
             ->join('orders','s_id=shop.id')
              ->where('orders.status','IN','2,3,4')
             ->sum('end_price');
         //统计粉丝
         $fans=Db::table('shop')
             ->alias('s')
             ->where('s.art_id',$id)
             ->join('follow','shop_id=shop.id')
             ->count();
         //统计访问量'
         $views=Db::table('shop')
             ->alias('s')
             ->where('s.art_id',$id)
             ->join('views','shop_id=shop.id')
             ->sum('views');
//halt($fans);
//halt($views);


         $this->assign('data',$data);
         $this->assign('volume',$volume);
         $this->assign('price',$price);
         $this->assign('fans',$fans);
         $this->assign('views',$views);

//            dump($data);
         return $this->fetch('read');

     }
    /**
     * 编辑
     * @param $request
     * @return json
     */
    public function edit($id)
    {
        if ($this->request->isAjax()) {
            $request = input();

            if(!empty($request['image'])){
                $request['image'] = implode(',',$request['image']);
            }
//            halt($request);
            return $this->editActon($request, $this->model);
        }
        //分类
        $class = Db::table('artist_class')
            ->where(['status'=>1])
            ->order('create_time')
            ->select();

        $this->assign('class',$class);

        $data = $this->model->find($id);

        $data['image'] = explode(',',$data['image']);
        $this->assign('data', $data);

        return $this->fetch('createEdit');
    }

    /**
     * 删除
     * @param $request
     * @return json
     */
    public function delete()
    {
            if ($this->request->isAjax() && $this->request->has('id')) {
                $id = $this->request->post('id');

                $data = $this->model->get($id);

                if (!$data) {
                    return $this->result('', 400, '当前数据不存在！删除失败');
                }

                $result = $data->delete();

                if ($result == FALSE) {
                    return $this->result('', 400, $data->getError());
                }

                return $this->result('', 200, '删除成功');
            }

            return $this->result('', 400, '删除失败');
    }

    /**
     * 获取数据
     * @param $request
     * @return json
     */
    public function getData($limit)
    {
        $request = input();
        if(!empty($request['key'])){
            $data = $this->model
                ->field('artist.*,artist.id,artist_class.name as classname,shopname,follownum')
                ->join('artist_class','artist.artist_class_id=artist_class.id','LEFT')
                ->join('shop','shop.art_id=artist.id')
                ->where('artist.name','like',"%".$request['key']['nickname']."%")
                ->whereOr('artist.phone',$request['key']['nickname'])
                ->order('artist.create_time desc')
                ->paginate($limit)
                ->toArray();
            foreach($data['data'] as $k => $v){
                if(!empty($v['id'])){
                    //查询拍品数量
                    $data['data'][$k]['count'] = db('goods')->where('artist_id',$v['id'])->count();
                    //查询成效数量
                    $data['data'][$k]['num'] = db('goods')
                        ->alias('a')
                        ->join('orders b','a.id = b.g_id')
                        ->where('a.artist_id',$v['id'])
                        ->where('b.status',4)
                        ->count();
                    $data['data'][$k]['pricesum']=db('goods')
                        ->alias('g')
                        ->join('orders o','g.id=o.g_id')
                        ->where('g.artist_id',$v['id'])
                        ->where('o.status',4)
                        ->sum('end_price');
                    //查询粉丝数量
                    $data['data'][$k]['followsum']=db('shop')
                        ->alias('s')
                        //$v['id']是artist的 ID 不能直接查出 follow中数据 follow 有shop_id member_id
                        //通过  artist 找到对应的 店铺 通过 店铺找到 关注
                        ->where('s.art_id',$v['id'])

                        ->join('follow f','f.shop_id=s.id')

                        ->count();
                }

            }
        }else{
            $data = $this->model

                ->field('artist.*,artist_class.name as classname,shopname,follownum')
                ->join('artist_class','artist.artist_class_id=artist_class.id','LEFT')
                ->join('shop','shop.art_id=artist.id','LEFT')
                ->order('artist.create_time desc')
                ->paginate($limit)
                ->toArray();
            foreach($data['data'] as $k => $v){
                if(!empty($v['id'])){
                    //查询拍品数量
                    $data['data'][$k]['count'] = db('goods')->where('artist_id',$v['id'])->count();
                    //查询成交数量
                    $data['data'][$k]['num'] = db('goods')
                        ->alias('a')
                        ->join('orders b','a.id = b.g_id')
                        ->where('a.artist_id',$v['id'])
                        ->where('b.status',4)
                        ->count();
                    //查询成交总金额
                    $data['data'][$k]['pricesum']=db('goods')
                        ->alias('g')
                        ->join('orders o','g.id=o.g_id')
                        ->where('g.artist_id',$v['id'])
                        ->where('o.status',4)
                        ->sum('end_price');
//                    //查询粉丝数量
                    $data['data'][$k]['followsum']=db('shop')
                        ->alias('s')
                        //$v['id']是artist的 ID 不能直接查出 follow中数据 follow 有shop_id member_id
                            //通过  artist 找到对应的 店铺 通过 店铺找到 关注
                        ->where('s.art_id',$v['id'])

                        ->join('follow f','f.shop_id=s.id')

                        ->count();
//
//
//

                }


            }

        }
//halt($data);
//            p($data);exit;
        return $this->result_layui($data['data'], 200, '分类信息', $data['total']);
    }

    /**
     * 编辑状态
     * @param $request
     * @return json
     */
    public function updatestate(){
        if ($this->request->isAjax() && $this->request->has('id')) {
            $data = $this->request->post();
            $this->model->where('id', $data['id'])->update(['status' => $data['status']]);
            return $this->result('', 200, '修改成功');
        }
        return $this->result('', 400, '修改失败');
    }

}